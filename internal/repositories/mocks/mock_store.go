// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/AntonBezemskiy/go-musthave-metrics/internal/repositories (interfaces: MetricsReader)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"

	repositories "github.com/AntonBezemskiy/go-musthave-metrics/internal/repositories"
)

// MockMetricsReader is a mock of MetricsReader interface.
type MockMetricsReader struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsReaderMockRecorder
}

// MockMetricsReaderMockRecorder is the mock recorder for MockMetricsReader.
type MockMetricsReaderMockRecorder struct {
	mock *MockMetricsReader
}

// NewMockMetricsReader creates a new mock instance.
func NewMockMetricsReader(ctrl *gomock.Controller) *MockMetricsReader {
	mock := &MockMetricsReader{ctrl: ctrl}
	mock.recorder = &MockMetricsReaderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsReader) EXPECT() *MockMetricsReaderMockRecorder {
	return m.recorder
}

// GetAllMetrics mocks base method.
func (m *MockMetricsReader) GetAllMetrics(arg0 context.Context) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMetrics", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllMetrics indicates an expected call of GetAllMetrics.
func (mr *MockMetricsReaderMockRecorder) GetAllMetrics(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMetrics", reflect.TypeOf((*MockMetricsReader)(nil).GetAllMetrics), arg0)
}

// GetAllMetricsSlice mocks base method.
func (m *MockMetricsReader) GetAllMetricsSlice(arg0 context.Context) ([]repositories.Metric, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllMetricsSlice", arg0)
	ret0, _ := ret[0].([]repositories.Metric)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllMetricsSlice indicates an expected call of GetAllMetricsSlice.
func (mr *MockMetricsReaderMockRecorder) GetAllMetricsSlice(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllMetricsSlice", reflect.TypeOf((*MockMetricsReader)(nil).GetAllMetricsSlice), arg0)
}

// GetMetric mocks base method.
func (m *MockMetricsReader) GetMetric(arg0 context.Context, arg1, arg2 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMetric", arg0, arg1, arg2)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMetric indicates an expected call of GetMetric.
func (mr *MockMetricsReaderMockRecorder) GetMetric(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMetric", reflect.TypeOf((*MockMetricsReader)(nil).GetMetric), arg0, arg1, arg2)
}
